// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö navigator
function collectNavigatorData() {
    const navigatorData = {
        // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
        userAgent: navigator.userAgent,
        appName: navigator.appName,
        appVersion: navigator.appVersion,
        platform: navigator.platform,
        language: navigator.language,
        languages: navigator.languages,
        cookieEnabled: navigator.cookieEnabled,
        onLine: navigator.onLine,
        
        // –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
        geolocation: navigator.geolocation ? '–î–æ—Å—Ç—É–ø–Ω–∞' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
        
        // –ú–µ–¥–∏–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        mediaDevices: navigator.mediaDevices ? '–î–æ—Å—Ç—É–ø–Ω—ã' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        permissions: navigator.permissions ? '–î–æ—Å—Ç—É–ø–Ω—ã' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
        
        // –°–µ—Ä–≤–∏—Å –≤–æ—Ä–∫–µ—Ä—ã
        serviceWorker: navigator.serviceWorker ? '–î–æ—Å—Ç—É–ø–Ω—ã' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
        
        // WebGL
        getGamepads: navigator.getGamepads ? '–î–æ—Å—Ç—É–ø–Ω—ã' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
        
        // Bluetooth
        bluetooth: navigator.bluetooth ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
        
        // USB
        usb: navigator.usb ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
        
        // Credentials
        credentials: navigator.credentials ? '–î–æ—Å—Ç—É–ø–Ω—ã' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
        
        // Clipboard
        clipboard: navigator.clipboard ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
        
        // Wake Lock
        wakeLock: navigator.wakeLock ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
        
        // –ü–∞–º—è—Ç—å
        deviceMemory: navigator.deviceMemory || '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ',
        hardwareConcurrency: navigator.hardwareConcurrency || '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ',
        
        // –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        connection: navigator.connection ? {
            effectiveType: navigator.connection.effectiveType,
            downlink: navigator.connection.downlink,
            rtt: navigator.connection.rtt
        } : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ',
        
        // –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        timestamp: new Date().toISOString(),
        pageLoadTime: performance.now()
    };

    // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–∞—É–∑–µ—Ä–µ
    try {
        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
        const userAgent = navigator.userAgent;
        let browser = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
        
        if (userAgent.includes('Chrome')) browser = 'Chrome';
        else if (userAgent.includes('Firefox')) browser = 'Firefox';
        else if (userAgent.includes('Safari')) browser = 'Safari';
        else if (userAgent.includes('Edge')) browser = 'Edge';
        else if (userAgent.includes('Opera')) browser = 'Opera';
        
        navigatorData.detectedBrowser = browser;
        
        // –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
        navigatorData.screen = {
            width: screen.width,
            height: screen.height,
            availWidth: screen.availWidth,
            availHeight: screen.availHeight,
            colorDepth: screen.colorDepth,
            pixelDepth: screen.pixelDepth
        };
        
        // –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        navigatorData.window = {
            innerWidth: window.innerWidth,
            innerHeight: window.innerHeight,
            outerWidth: window.outerWidth,
            outerHeight: window.outerHeight
        };
        
        // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞
        navigatorData.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
        
        // –õ–æ–∫–∞–ª—å
        navigatorData.locale = Intl.DateTimeFormat().resolvedOptions().locale;
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
    }

    return navigatorData;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Å–æ–ª—å
function logNavigatorData() {
    const data = collectNavigatorData();
    
    console.log('=== –î–ê–ù–ù–´–ï NAVIGATOR ===');
    console.log('–í—Ä–µ–º—è —Å–±–æ—Ä–∞:', data.timestamp);
    console.log('–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', data.pageLoadTime.toFixed(2) + 'ms');
    console.log('');
    
    console.log('üì± –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:');
    console.log('User Agent:', data.userAgent);
    console.log('–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', data.appName);
    console.log('–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', data.appVersion);
    console.log('–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:', data.platform);
    console.log('–Ø–∑—ã–∫:', data.language);
    console.log('–Ø–∑—ã–∫–∏:', data.languages);
    console.log('Cookies –≤–∫–ª—é—á–µ–Ω—ã:', data.cookieEnabled);
    console.log('–û–Ω–ª–∞–π–Ω:', data.onLine);
    console.log('–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä:', data.detectedBrowser);
    console.log('');
    
    console.log('üñ•Ô∏è –≠–ö–†–ê–ù –ò –û–ö–ù–û:');
    console.log('–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞:', data.screen.width + 'x' + data.screen.height);
    console.log('–î–æ—Å—Ç—É–ø–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ:', data.screen.availWidth + 'x' + data.screen.availHeight);
    console.log('–ì–ª—É–±–∏–Ω–∞ —Ü–≤–µ—Ç–∞:', data.screen.colorDepth);
    console.log('–†–∞–∑–º–µ—Ä –æ–∫–Ω–∞:', data.window.innerWidth + 'x' + data.window.innerHeight);
    console.log('');
    
    console.log('‚öôÔ∏è –°–ò–°–¢–ï–ú–ê:');
    console.log('–ü–∞–º—è—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:', data.deviceMemory + 'GB');
    console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä:', data.hardwareConcurrency);
    console.log('–í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞:', data.timezone);
    console.log('–õ–æ–∫–∞–ª—å:', data.locale);
    console.log('');
    
    console.log('üîß –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –ë–†–ê–£–ó–ï–†–ê:');
    console.log('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è:', data.geolocation);
    console.log('–ú–µ–¥–∏–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:', data.mediaDevices);
    console.log('–†–∞–∑—Ä–µ—à–µ–Ω–∏—è:', data.permissions);
    console.log('–°–µ—Ä–≤–∏—Å –≤–æ—Ä–∫–µ—Ä—ã:', data.serviceWorker);
    console.log('–ì–µ–π–º–ø–∞–¥—ã:', data.getGamepads);
    console.log('Bluetooth:', data.bluetooth);
    console.log('USB:', data.usb);
    console.log('–£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', data.credentials);
    console.log('–ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞:', data.clipboard);
    console.log('Wake Lock:', data.wakeLock);
    console.log('');
    
    if (data.connection !== '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ') {
        console.log('üåê –°–û–ï–î–ò–ù–ï–ù–ò–ï:');
        console.log('–¢–∏–ø —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', data.connection.effectiveType);
        console.log('–°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏:', data.connection.downlink + 'Mbps');
        console.log('RTT:', data.connection.rtt + 'ms');
        console.log('');
    }
    
    console.log('=== –ö–û–ù–ï–¶ –î–ê–ù–ù–´–• ===');
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    sendDataToServer(data);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
function sendDataToServer(data) {
    fetch('/api/navigator-data', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
    })
    .catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    });
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, —Å–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ navigator...');
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(() => {
        logNavigatorData();
    }, 1000);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
    const button = document.createElement('button');
    button.textContent = 'üîÑ –°–æ–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ navigator';
    button.className = 'btn';
    button.style.margin = '20px auto';
    button.style.display = 'block';
    button.onclick = logNavigatorData;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–∞—á–∞–ª–æ main
    const main = document.querySelector('main');
    if (main) {
        main.insertBefore(button, main.firstChild);
    }
});

// –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', function() {
    console.log('üìè –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ...');
    setTimeout(logNavigatorData, 500);
});

// –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ç–∏
window.addEventListener('online', function() {
    console.log('üåê –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    logNavigatorData();
});

window.addEventListener('offline', function() {
    console.log('‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ');
    logNavigatorData();
}); 